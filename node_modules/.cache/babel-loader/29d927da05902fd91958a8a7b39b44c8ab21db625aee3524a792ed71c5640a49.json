{"ast":null,"code":"var _jsxFileName = \"/Users/eldar/Desktop/IT/projects/react-intro/my-app/src/components/hangman/hangman.js\";\nimport React, { Component } from \"react\";\nimport './hangman.css';\nimport { randomWord } from \"./words.js\";\nimport img0 from \"./images/0.jpg\";\nimport img1 from \"./images/1.jpg\";\nimport img2 from \"./images/2.PNG\";\nimport img3 from \"./images/3.PNG\";\nimport img4 from \"./images/4.PNG\";\nimport img5 from \"./images/5.PNG\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Hangman extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mistake: 0,\n      guessed: new Set([]),\n      answer: randomWord()\n    };\n  }\n  guessedWord() {\n    return this.state.answer.split(\"\").map();\n  }\n  render() {\n    const gameOver = this.state.mistake >= this.props.maxWrong;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Hangman container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"hangmanText\",\n        children: \"Hangman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Wrong Answers: \", this.state.mistake, \" of \", this.props.maxWrong]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"hangmanImg\",\n          src: this.props.images[this.state.mistake],\n          alt: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Guess the word:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: !gameOver ? this.guessedWord() : this.state.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// Hangman.defaultProps = {\n//     maxWrong: 6,\n//     images: [img0, img1, img2, img3, img4, img5]\n// }\nHangman.defaultProps = {\n  maxWrong: 6,\n  images: [img0, img1, img2, img3, img4, img5]\n};\nexport default Hangman;","map":{"version":3,"names":["React","Component","randomWord","img0","img1","img2","img3","img4","img5","jsxDEV","_jsxDEV","Hangman","constructor","props","state","mistake","guessed","Set","answer","guessedWord","split","map","render","gameOver","maxWrong","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","images","alt","defaultProps"],"sources":["/Users/eldar/Desktop/IT/projects/react-intro/my-app/src/components/hangman/hangman.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport './hangman.css'\nimport { randomWord } from \"./words.js\";\n\n\nimport img0 from \"./images/0.jpg\"\nimport img1 from \"./images/1.jpg\"\nimport img2 from \"./images/2.PNG\"\nimport img3 from \"./images/3.PNG\"\nimport img4 from \"./images/4.PNG\"\nimport img5 from \"./images/5.PNG\"\n\nclass Hangman extends Component {\n    static defaultProps = {\n        maxWrong: 6,\n        images: [img0, img1, img2, img3, img4, img5],\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mistake: 0,\n            guessed: new Set([]),\n            answer: randomWord(),\n        }\n    }\n\n    guessedWord() {\n        return this.state.answer.split(\"\").map()\n    }\n\n\n    render() {\n        const gameOver = this.state.mistake >= this.props.maxWrong;\n\n        return (\n            <div className=\"Hangman container\">\n                <h1 className=\"hangmanText\">Hangman</h1>\n                {/* кол-во не правельных ответов в  Hangman */}\n                <div>Wrong Answers: {this.state.mistake} of {this.props.maxWrong}</div>\n                {/* изображения Hangman */}\n                <div>\n                    <img className=\"hangmanImg\" src={this.props.images[this.state.mistake]} alt=\"image\" />\n                </div>\n                {/* Guess the word*/}\n                <div>\n                    <p>Guess the word:</p>\n                    <p>\n                        {!gameOver ? this.guessedWord() : this.state.answer}\n                    </p>\n                </div>\n            </div>\n        )\n    }\n}\n\n// Hangman.defaultProps = {\n//     maxWrong: 6,\n//     images: [img0, img1, img2, img3, img4, img5]\n// }\n\nexport default Hangman;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,eAAe;AACtB,SAASC,UAAU,QAAQ,YAAY;AAGvC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,IAAI,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,OAAO,SAASV,SAAS,CAAC;EAM5BW,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,IAAIC,GAAG,CAAC,EAAE,CAAC;MACpBC,MAAM,EAAEhB,UAAU,CAAC;IACvB,CAAC;EACL;EAEAiB,WAAWA,CAAA,EAAG;IACV,OAAO,IAAI,CAACL,KAAK,CAACI,MAAM,CAACE,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAAC;EAC5C;EAGAC,MAAMA,CAAA,EAAG;IACL,MAAMC,QAAQ,GAAG,IAAI,CAACT,KAAK,CAACC,OAAO,IAAI,IAAI,CAACF,KAAK,CAACW,QAAQ;IAE1D,oBACId,OAAA;MAAKe,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9BhB,OAAA;QAAIe,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAExCpB,OAAA;QAAAgB,QAAA,GAAK,iBAAe,EAAC,IAAI,CAACZ,KAAK,CAACC,OAAO,EAAC,MAAI,EAAC,IAAI,CAACF,KAAK,CAACW,QAAQ;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEvEpB,OAAA;QAAAgB,QAAA,eACIhB,OAAA;UAAKe,SAAS,EAAC,YAAY;UAACM,GAAG,EAAE,IAAI,CAAClB,KAAK,CAACmB,MAAM,CAAC,IAAI,CAAClB,KAAK,CAACC,OAAO,CAAE;UAACkB,GAAG,EAAC;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC,eAENpB,OAAA;QAAAgB,QAAA,gBACIhB,OAAA;UAAAgB,QAAA,EAAG;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACtBpB,OAAA;UAAAgB,QAAA,EACK,CAACH,QAAQ,GAAG,IAAI,CAACJ,WAAW,CAAC,CAAC,GAAG,IAAI,CAACL,KAAK,CAACI;QAAM;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;AACJ;;AAEA;AACA;AACA;AACA;AA/CMnB,OAAO,CACFuB,YAAY,GAAG;EAClBV,QAAQ,EAAE,CAAC;EACXQ,MAAM,EAAE,CAAC7B,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI;AAC/C,CAAC;AA6CL,eAAeG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}