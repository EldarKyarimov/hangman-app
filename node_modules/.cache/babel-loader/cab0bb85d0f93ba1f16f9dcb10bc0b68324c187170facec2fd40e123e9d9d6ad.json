{"ast":null,"code":"var _jsxFileName = \"/Users/eldar/Desktop/IT/projects/react-intro/my-app/src/components/hangman/hangman.js\";\nimport React, { Component } from \"react\";\nimport './hangman.css';\nimport { randomWord } from \"./words.js\";\nimport img0 from \"./images/0.jpg\";\nimport img1 from \"./images/1.jpg\";\nimport img2 from \"./images/2.PNG\";\nimport img3 from \"./images/3.PNG\";\nimport img4 from \"./images/4.PNG\";\nimport img5 from \"./images/5.PNG\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Hangman extends Component {\n  constructor(props) {\n    super(props);\n    this.handleGuess = e => {\n      let letter = e.target.value;\n      this.setState(st => ({\n        guessed: st.guessed\n      }));\n    };\n    this.state = {\n      mistake: 0,\n      guessed: new Set([]),\n      answer: randomWord()\n    };\n  }\n  guessedWord() {\n    return this.state.answer.split(\"\").map(letter => this.state.guessed.has(letter) ? letter : \" _ \");\n  }\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"letterBtn\",\n      value: letter,\n      onClick: this.handleGuess,\n      disabled: this.state.guessed.has(letter),\n      children: letter\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this));\n  }\n  render() {\n    const gameOver = this.state.mistake >= this.props.maxWrong;\n    let gameState = this.generateButtons();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Hangman container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"hangmanText\",\n        children: \"Hangman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Wrong Answers: \", this.state.mistake, \" of \", this.props.maxWrong]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"hangmanImg\",\n          src: this.props.images[this.state.mistake],\n          alt: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Guess the word:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: !gameOver ? this.guessedWord() : this.state.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: gameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// Hangman.defaultProps = {\n//     maxWrong: 6,\n//     images: [img0, img1, img2, img3, img4, img5]\n// }\nHangman.defaultProps = {\n  maxWrong: 6,\n  images: [img0, img1, img2, img3, img4, img5]\n};\nexport default Hangman;","map":{"version":3,"names":["React","Component","randomWord","img0","img1","img2","img3","img4","img5","jsxDEV","_jsxDEV","Hangman","constructor","props","handleGuess","e","letter","target","value","setState","st","guessed","state","mistake","Set","answer","guessedWord","split","map","has","generateButtons","className","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","render","gameOver","maxWrong","gameState","src","images","alt","defaultProps"],"sources":["/Users/eldar/Desktop/IT/projects/react-intro/my-app/src/components/hangman/hangman.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport './hangman.css'\nimport { randomWord } from \"./words.js\";\n\n\nimport img0 from \"./images/0.jpg\"\nimport img1 from \"./images/1.jpg\"\nimport img2 from \"./images/2.PNG\"\nimport img3 from \"./images/3.PNG\"\nimport img4 from \"./images/4.PNG\"\nimport img5 from \"./images/5.PNG\"\n\nclass Hangman extends Component {\n    static defaultProps = {\n        maxWrong: 6,\n        images: [img0, img1, img2, img3, img4, img5],\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mistake: 0,\n            guessed: new Set([]),\n            answer: randomWord(),\n        }\n    }\n\n    handleGuess = e => {\n        let letter = e.target.value;\n        this.setState(st => ({\n            guessed: st.guessed\n        }));\n    }\n\n    guessedWord() {\n        return this.state.answer.split(\"\").map(letter => (this.state.guessed.has(letter) ? letter : \" _ \"))\n    }\n\n    generateButtons() {\n        return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(letter => (\n            <button\n                className=\"letterBtn\"\n                key={letter}\n                value={letter}\n                onClick={this.handleGuess}\n                disabled={this.state.guessed.has(letter)}\n            >\n                {letter}\n            </button>\n        ))\n    }\n\n\n    render() {\n        const gameOver = this.state.mistake >= this.props.maxWrong;\n        let gameState = this.generateButtons();\n\n        return (\n            <div className=\"Hangman container\">\n                <h1 className=\"hangmanText\">Hangman</h1>\n                {/* кол-во не правельных ответов в  Hangman */}\n                <div>Wrong Answers: {this.state.mistake} of {this.props.maxWrong}</div>\n                {/* изображения Hangman */}\n                <div>\n                    <img className=\"hangmanImg\" src={this.props.images[this.state.mistake]} alt=\"image\" />\n                </div>\n                {/* Guess the word*/}\n                <div>\n                    <p>Guess the word:</p>\n                    <p>\n                        {!gameOver ? this.guessedWord() : this.state.answer}\n                    </p>\n                    <p>{gameState}</p>\n                </div>\n\n\n            </div>\n        )\n    }\n}\n\n// Hangman.defaultProps = {\n//     maxWrong: 6,\n//     images: [img0, img1, img2, img3, img4, img5]\n// }\n\nexport default Hangman;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}